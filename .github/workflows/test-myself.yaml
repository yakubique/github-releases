name: Test `github-releases` action
on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: [ "ubuntu-latest" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Grab releases from Github
        id: get_releases
        uses: ./ # Uses an action in the root directory
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repository: yakubique/orogene
      - name: Echo output
        run: |
          echo "${{ steps.get_releases.outputs.releases }}"

  test-detailed:
    runs-on: [ "ubuntu-latest" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Grab detailed releases from Github
        id: get_releases
        uses: ./ # Uses an action in the root directory
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repository: yakubique/orogene
          details: 'true'
          pre: 'true'
      - name: Echo output
        run: |
          echo "${{ steps.get_releases.outputs.releases }}"

  test-sorted:
    runs-on: [ "ubuntu-latest" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Grab sorted releases from Github
        id: get_releases
        uses: ./ # Uses an action in the root directory
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repository: yakubique/orogene
          sortVersions: 'desc'
      - name: Echo output
        run: |
          echo "${{ steps.get_releases.outputs.releases }}"
